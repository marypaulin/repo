[ec2-user@ip-172-31-46-228 src]$ mprof run test_memory.py; python3 test_bound.py
mprof: Sampling memory every 0.1s
running as a Python program...
============================================No lookahead===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
COUNT: 1000000
COUNT: 2000000
COUNT: 3000000
COUNT: 4000000
COUNT: 5000000
COUNT: 6000000
COUNT: 7000000
COUNT: 8000000
COUNT: 9000000
COUNT: 10000000
COUNT: 11000000
COUNT: 12000000
COUNT: 13000000
COUNT: 14000000
COUNT: 15000000
COUNT: 16000000
COUNT: 17000000
COUNT: 18000000
COUNT: 19000000
COUNT: 20000000
COUNT: 21000000
COUNT: 22000000
COUNT: 23000000
COUNT: 24000000
COUNT: 25000000
COUNT: 26000000
COUNT: 27000000
COUNT: 28000000
COUNT: 29000000
COUNT: 30000000
COUNT: 31000000
COUNT: 32000000
COUNT: 33000000
COUNT: 34000000
COUNT: 35000000
COUNT: 36000000
COUNT: 37000000
COUNT: 38000000
COUNT: 39000000
COUNT: 40000000
COUNT: 41000000
COUNT: 42000000
COUNT: 43000000
COUNT: 44000000
COUNT: 45000000
COUNT: 46000000
COUNT: 47000000
COUNT: 48000000
COUNT: 49000000
COUNT: 50000000
COUNT: 51000000
COUNT: 52000000
COUNT: 53000000
COUNT: 54000000
COUNT: 55000000
COUNT: 56000000
COUNT: 57000000
COUNT: 58000000
COUNT: 59000000
COUNT: 60000000
COUNT: 61000000
COUNT: 62000000
COUNT: 63000000
COUNT: 64000000
COUNT: 65000000
COUNT: 66000000
COUNT: 67000000
COUNT: 68000000
COUNT: 69000000
COUNT: 70000000
COUNT: 71000000
COUNT: 72000000
COUNT: 73000000
COUNT: 74000000
COUNT: 75000000
COUNT: 76000000
COUNT: 77000000
COUNT: 78000000
COUNT: 79000000
COUNT: 80000000
COUNT: 81000000
COUNT: 82000000
COUNT: 83000000
COUNT: 84000000
COUNT: 85000000
COUNT: 86000000
COUNT: 87000000
COUNT: 88000000
COUNT: 89000000
COUNT: 90000000
COUNT: 91000000
COUNT: 92000000
COUNT: 93000000
COUNT: 94000000
COUNT: 95000000
COUNT: 96000000
COUNT: 97000000
COUNT: 98000000
COUNT: 99000000
COUNT: 100000000
COUNT: 101000000
COUNT: 102000000
COUNT: 103000000
COUNT: 104000000
COUNT: 105000000
COUNT: 106000000
COUNT: 107000000
COUNT: 108000000
COUNT: 109000000
COUNT: 110000000
COUNT: 111000000
COUNT: 112000000
COUNT: 113000000
COUNT: 114000000
COUNT: 115000000
COUNT: 116000000
COUNT: 117000000
COUNT: 118000000
COUNT: 119000000
COUNT: 120000000
COUNT: 121000000
COUNT: 122000000
COUNT: 123000000
COUNT: 124000000
COUNT: 125000000
COUNT: 126000000
COUNT: 127000000
COUNT: 128000000
COUNT: 129000000
COUNT: 130000000
COUNT: 131000000
COUNT: 132000000
COUNT: 133000000
COUNT: 134000000
COUNT: 135000000
COUNT: 136000000
COUNT: 137000000
COUNT: 138000000
COUNT: 139000000
COUNT: 140000000
COUNT: 141000000
COUNT: 142000000
COUNT: 143000000
COUNT: 144000000
COUNT: 145000000
COUNT: 146000000
COUNT: 147000000
COUNT: 148000000
COUNT: 149000000
COUNT: 150000000
COUNT: 151000000
COUNT: 152000000
COUNT: 153000000
COUNT: 154000000
COUNT: 155000000
COUNT: 156000000
COUNT: 157000000
COUNT: 158000000
COUNT: 159000000
COUNT: 160000000
COUNT: 161000000
COUNT: 162000000
COUNT: 163000000
COUNT: 164000000
COUNT: 165000000
COUNT: 166000000
COUNT: 167000000
COUNT: 168000000
COUNT: 169000000
COUNT: 170000000
COUNT: 171000000
COUNT: 172000000
COUNT: 173000000
COUNT: 174000000
COUNT: 175000000
COUNT: 176000000
COUNT: 177000000
COUNT: 178000000
COUNT: 179000000
COUNT: 180000000
COUNT: 181000000
COUNT: 182000000
COUNT: 183000000
COUNT: 184000000
COUNT: 185000000
COUNT: 186000000
COUNT: 187000000
COUNT: 188000000
COUNT: 189000000
COUNT: 190000000
COUNT: 191000000
COUNT: 192000000
COUNT: 193000000
COUNT: 194000000
COUNT: 195000000
COUNT: 196000000
COUNT: 197000000
COUNT: 198000000
COUNT: 199000000
COUNT: 200000000
COUNT: 201000000
COUNT: 202000000
COUNT: 203000000
COUNT: 204000000
COUNT: 205000000
COUNT: 206000000
COUNT: 207000000
COUNT: 208000000
COUNT: 209000000
COUNT: 210000000
COUNT: 211000000
COUNT: 212000000
COUNT: 213000000
COUNT: 214000000
COUNT: 215000000
COUNT: 216000000
COUNT: 217000000
COUNT: 218000000
COUNT: 219000000
COUNT: 220000000
COUNT: 221000000
COUNT: 222000000
COUNT: 223000000
COUNT: 224000000
COUNT: 225000000
COUNT: 226000000
COUNT: 227000000
COUNT: 228000000
COUNT: 229000000
COUNT: 230000000
COUNT: 231000000
COUNT: 232000000
COUNT: 233000000
COUNT: 234000000
COUNT: 235000000
COUNT: 236000000
COUNT: 237000000
COUNT: 238000000
COUNT: 239000000
COUNT: 240000000
COUNT: 241000000
COUNT: 242000000
COUNT: 243000000
COUNT: 244000000
COUNT: 245000000
COUNT: 246000000
COUNT: 247000000
COUNT: 248000000
COUNT: 249000000
COUNT: 250000000
COUNT: 251000000
COUNT: 252000000
COUNT: 253000000
COUNT: 254000000
COUNT: 255000000
COUNT: 256000000
COUNT: 257000000
COUNT: 258000000
COUNT: 259000000
COUNT: 260000000
COUNT: 261000000
COUNT: 262000000
COUNT: 263000000
COUNT: 264000000
COUNT: 265000000
COUNT: 266000000
COUNT: 267000000
COUNT: 268000000
COUNT: 269000000
COUNT: 270000000
COUNT: 271000000
COUNT: 272000000
COUNT: 273000000
COUNT: 274000000
COUNT: 275000000
COUNT: 276000000
COUNT: 277000000
COUNT: 278000000
COUNT: 279000000
COUNT: 280000000
COUNT: 281000000
COUNT: 282000000
COUNT: 283000000
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: False
prior_metric= curiosity
total time:  28635.871414661407
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  3078445
time when the best tree is achieved:  262.63501381874084
TOTAL COUNT:  283712499
============================================PriorQueue by curiosity===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= curiosity
total time:  96.19383549690247
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  18195
time when the best tree is achieved:  25.78466534614563
TOTAL COUNT:  241306
============================================PriorQueue by objective===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= objective
total time:  130.1740849018097
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  423627
time when the best tree is achieved:  58.786203145980835
TOTAL COUNT:  635449
============================================PriorQueue by lower bound===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
COUNT: 1000000
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= bound
total time:  186.94246530532837
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  1713709
time when the best tree is achieved:  175.47961831092834
TOTAL COUNT:  1714011
============================================PriorQueue by entropy===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
COUNT: 1000000
COUNT: 2000000
COUNT: 3000000
COUNT: 4000000
COUNT: 5000000
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= entropy
total time:  671.8376977443695
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  5332413
time when the best tree is achieved:  582.2138195037842
TOTAL COUNT:  5381467
============================================PriorQueue by gini===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
COUNT: 1000000
COUNT: 2000000
COUNT: 3000000
COUNT: 4000000
COUNT: 5000000
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= gini
total time:  646.714010477066
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  5331925
time when the best tree is achieved:  551.6462776660919
TOTAL COUNT:  5381001
============================================All bounds===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= curiosity
total time:  96.42184948921204
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  18195
time when the best tree is achieved:  25.756438732147217
TOTAL COUNT:  241306
============================================No support===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: False
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= curiosity
total time:  97.84959983825684
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  21232
time when the best tree is achieved:  25.589618921279907
TOTAL COUNT:  278868
============================================No accu_support===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: False
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= curiosity
total time:  108.03627562522888
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  24682
time when the best tree is achieved:  25.76798915863037
TOTAL COUNT:  548618
============================================No incre_support===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
>>> log: False
>>> support bound: True
>>> incre_support: False
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: True
prior_metric= curiosity
total time:  115.78686428070068
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  23075
time when the best tree is achieved:  27.801185607910156
TOTAL COUNT:  482013
============================================No lookahead===================================================
nrule: 12
ndata: 6907
gr: [0.00438766 0.0037798  0.00481064 0.00654486 0.00818606 0.00697492
 0.00861952 0.01958141 0.0261244  0.00328364 0.0004441  0.03628272]
order: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
odr: [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
the order of x's columns:  [11, 8, 7, 6, 4, 5, 3, 2, 0, 1, 9, 10]
COUNT: 1000000
COUNT: 2000000
COUNT: 3000000
COUNT: 4000000
COUNT: 5000000
COUNT: 6000000
COUNT: 7000000
COUNT: 8000000
COUNT: 9000000
COUNT: 10000000
COUNT: 11000000
COUNT: 12000000
COUNT: 13000000
COUNT: 14000000
COUNT: 15000000
COUNT: 16000000
COUNT: 17000000
COUNT: 18000000
COUNT: 19000000
COUNT: 20000000
COUNT: 21000000
COUNT: 22000000
COUNT: 23000000
COUNT: 24000000
COUNT: 25000000
COUNT: 26000000
COUNT: 27000000
COUNT: 28000000
COUNT: 29000000
COUNT: 30000000
COUNT: 31000000
COUNT: 32000000
COUNT: 33000000
COUNT: 34000000
COUNT: 35000000
COUNT: 36000000
COUNT: 37000000
COUNT: 38000000
COUNT: 39000000
COUNT: 40000000
COUNT: 41000000
COUNT: 42000000
COUNT: 43000000
COUNT: 44000000
COUNT: 45000000
COUNT: 46000000
COUNT: 47000000
COUNT: 48000000
COUNT: 49000000
COUNT: 50000000
COUNT: 51000000
COUNT: 52000000
COUNT: 53000000
COUNT: 54000000
COUNT: 55000000
COUNT: 56000000
COUNT: 57000000
COUNT: 58000000
COUNT: 59000000
COUNT: 60000000
COUNT: 61000000
COUNT: 62000000
COUNT: 63000000
COUNT: 64000000
COUNT: 65000000
COUNT: 66000000
COUNT: 67000000
COUNT: 68000000
COUNT: 69000000
COUNT: 70000000
COUNT: 71000000
COUNT: 72000000
COUNT: 73000000
COUNT: 74000000
COUNT: 75000000
COUNT: 76000000
COUNT: 77000000
COUNT: 78000000
COUNT: 79000000
COUNT: 80000000
COUNT: 81000000
COUNT: 82000000
COUNT: 83000000
COUNT: 84000000
COUNT: 85000000
COUNT: 86000000
COUNT: 87000000
COUNT: 88000000
COUNT: 89000000
COUNT: 90000000
COUNT: 91000000
COUNT: 92000000
COUNT: 93000000
COUNT: 94000000
COUNT: 95000000
COUNT: 96000000
COUNT: 97000000
COUNT: 98000000
COUNT: 99000000
COUNT: 100000000
COUNT: 101000000
COUNT: 102000000
COUNT: 103000000
COUNT: 104000000
COUNT: 105000000
COUNT: 106000000
COUNT: 107000000
COUNT: 108000000
COUNT: 109000000
COUNT: 110000000
COUNT: 111000000
COUNT: 112000000
COUNT: 113000000
COUNT: 114000000
COUNT: 115000000
COUNT: 116000000
COUNT: 117000000
COUNT: 118000000
COUNT: 119000000
COUNT: 120000000
COUNT: 121000000
COUNT: 122000000
COUNT: 123000000
COUNT: 124000000
COUNT: 125000000
COUNT: 126000000
COUNT: 127000000
COUNT: 128000000
COUNT: 129000000
COUNT: 130000000
COUNT: 131000000
COUNT: 132000000
COUNT: 133000000
COUNT: 134000000
COUNT: 135000000
COUNT: 136000000
COUNT: 137000000
COUNT: 138000000
COUNT: 139000000
COUNT: 140000000
COUNT: 141000000
COUNT: 142000000
COUNT: 143000000
COUNT: 144000000
COUNT: 145000000
COUNT: 146000000
COUNT: 147000000
COUNT: 148000000
COUNT: 149000000
COUNT: 150000000
COUNT: 151000000
COUNT: 152000000
COUNT: 153000000
COUNT: 154000000
COUNT: 155000000
COUNT: 156000000
COUNT: 157000000
COUNT: 158000000
COUNT: 159000000
COUNT: 160000000
COUNT: 161000000
COUNT: 162000000
COUNT: 163000000
COUNT: 164000000
COUNT: 165000000
COUNT: 166000000
COUNT: 167000000
COUNT: 168000000
COUNT: 169000000
COUNT: 170000000
COUNT: 171000000
COUNT: 172000000
COUNT: 173000000
COUNT: 174000000
COUNT: 175000000
COUNT: 176000000
COUNT: 177000000
COUNT: 178000000
COUNT: 179000000
COUNT: 180000000
COUNT: 181000000
COUNT: 182000000
COUNT: 183000000
COUNT: 184000000
COUNT: 185000000
COUNT: 186000000
COUNT: 187000000
COUNT: 188000000
COUNT: 189000000
COUNT: 190000000
COUNT: 191000000
COUNT: 192000000
COUNT: 193000000
COUNT: 194000000
COUNT: 195000000
COUNT: 196000000
COUNT: 197000000
COUNT: 198000000
COUNT: 199000000
COUNT: 200000000
COUNT: 201000000
COUNT: 202000000
COUNT: 203000000
COUNT: 204000000
COUNT: 205000000
COUNT: 206000000
COUNT: 207000000
COUNT: 208000000
COUNT: 209000000
COUNT: 210000000
COUNT: 211000000
COUNT: 212000000
COUNT: 213000000
COUNT: 214000000
COUNT: 215000000
COUNT: 216000000
COUNT: 217000000
COUNT: 218000000
COUNT: 219000000
COUNT: 220000000
COUNT: 221000000
COUNT: 222000000
COUNT: 223000000
COUNT: 224000000
COUNT: 225000000
COUNT: 226000000
COUNT: 227000000
COUNT: 228000000
COUNT: 229000000
COUNT: 230000000
COUNT: 231000000
COUNT: 232000000
COUNT: 233000000
COUNT: 234000000
COUNT: 235000000
COUNT: 236000000
COUNT: 237000000
COUNT: 238000000
COUNT: 239000000
COUNT: 240000000
COUNT: 241000000
COUNT: 242000000
COUNT: 243000000
COUNT: 244000000
COUNT: 245000000
COUNT: 246000000
COUNT: 247000000
COUNT: 248000000
COUNT: 249000000
COUNT: 250000000
COUNT: 251000000
COUNT: 252000000
COUNT: 253000000
COUNT: 254000000
COUNT: 255000000
COUNT: 256000000
COUNT: 257000000
COUNT: 258000000
COUNT: 259000000
COUNT: 260000000
COUNT: 261000000
COUNT: 262000000
COUNT: 263000000
COUNT: 264000000
COUNT: 265000000
COUNT: 266000000
COUNT: 267000000
COUNT: 268000000
COUNT: 269000000
COUNT: 270000000
COUNT: 271000000
COUNT: 272000000
COUNT: 273000000
COUNT: 274000000
COUNT: 275000000
COUNT: 276000000
COUNT: 277000000
COUNT: 278000000
COUNT: 279000000
COUNT: 280000000
COUNT: 281000000
COUNT: 282000000
COUNT: 283000000
>>> log: False
>>> support bound: True
>>> incre_support: True
>>> accurate support bound: True
>>> equiv points bound: True
>>> lookahead bound: False
prior_metric= curiosity
total time:  30021.671007871628
lambda:  0.005
leaves:  [(1,), (-7, -1), (-1, 7, 12), (-12, -3, -1, 7), (-12, -1, 3, 7)]
num_captured:  [2174, 2898, 483, 205, 1147]
num_captured_incorrect:  [736, 855, 164, 76, 455]
prediction:  [1, 0, 1, 1, 0]
Objective:  0.35596858259736497
COUNT of the best tree:  3078445
time when the best tree is achieved:  271.60330843925476
TOTAL COUNT:  283712499
